# Database
db.driver = com.mysql.jdbc.Driver
db.url = jdbc:mysql://localhost:3306/phonebook
db.username = alex
db.password = mysql

db.acquireIncrement=5
db.connectionTestPeriod=60
db.maxPoolSize=100
db.maxStatements=50
db.minPoolSize=10

# Hibernate
hibernate.dialect = org.hibernate.dialect.MySQLDialect
hibernate.show_sql= true
hibernate.hbm2ddl.auto = update
entitymanager.packagesToScan = com.springboot


# DataSource settings: set here your own configurations for the database
# connection. In this example we have "netgloo_blog" as database name and
# "root" as username and password.
#spring.datasource.url = jdbc:mysql://localhost:3306/phonebook
#spring.datasource.username = alex
#spring.datasource.password = mysql

# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
#spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
#spring.jpa.hibernate.ddl-auto = update

# Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQLDialect

# MVC
# spring.mvc.view.prefix = /WEB-INF/jsp/
# spring.mvc.view.suffix = .jsp